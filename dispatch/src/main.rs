//! Generated by capsule
//!
//! `main.rs` is used to define rust lang items and modules.
//! See `entry.rs` for the `main` function.
//! See `error.rs` for the `Error` type.

#![no_std]
#![no_main]
#![feature(lang_items)]
#![feature(alloc_error_handler)]
#![feature(panic_info_message)]
#![feature(custom_test_frameworks)]
#![reexport_test_harness_main = "test_main"]
#![test_runner(test_framework::my_runner)]
//define modules
mod constants;

mod dlopen;
mod entry;
mod error;
mod json_parser;
mod macros;
mod sha256;
mod structures;
mod types;
mod utils;
#[cfg(test)]
mod test_framework;
mod witness_parser;
mod lv_parser;
mod cell_parser;

use ckb_std::default_alloc;

ckb_std::entry!(program_entry);
default_alloc!();

fn program_entry() -> i8 {
    //Call main function and return error code
    #[cfg(not(test))]
    match entry::main() {
        Ok(_) => 0,
        Err(err) => err as i8,
    }

    //Call test_main function and return error code
    #[cfg(test)]
    test_main();
    #[cfg(test)] // this is needed to avoid compilation error,
    return -1; //use -1 to avoid use test version in real program
}
